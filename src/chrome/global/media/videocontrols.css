/* ***** NO LICENSE mentioned on the original code *****
 *
 * Contributor(s):
 *   SmartBright (hb.smartBright@gmail.com) <macfox_nostalgia>
 *
 * ***************************************************** */

/* <<<<< macfox_nostalgia >>>>> */

/* ===== videocontrols.css ==============================================
  == Styles used by video tag elements in html.
  ======================================================================= */

/* "https://developer.mozilla.org/en/CSS/CSS_transitions" で確認 */

@namespace url("http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul");

/* :::::::::: container :::::::::: */

.controlBar {
	background-color: rgba(35, 31, 32, .74);
	height: 28px;
}

/* :::::::::: control button :::::::::: */

.playButton {
	/* Remove the native button appearance and styling */
	-moz-appearance: none;
	margin: 0;
	padding: 0;
	margin-right: -22px; /* 1/2 of scrubber thumb width, for overhang. */
	border: none;
	background: url("chrome://global/skin/media/pauseButton.png") no-repeat center;
	position: relative; /* Trick to work around negative margin interfering with clicking on the button. */
	min-width: 28px;
	min-height: 28px;
}

.playButton[paused="true"] {
	background: url("chrome://global/skin/media/playButton.png") no-repeat center;
}

.muteButton {
	/* Remove the native button appearance and styling */
	-moz-appearance: none;
	margin: 0;
	padding: 0;
	border: none;
	background: url("chrome://global/skin/media/muteButton.png") no-repeat center;
	min-width: 33px;
	min-height: 28px;
}

.muteButton[muted="true"] {
	background: url("chrome://global/skin/media/unmuteButton.png") no-repeat center;
}

.playButton .button-box,
.muteButton .button-box {
	padding: 0;
	background-image: none;
	min-height: 28px;
}

/* :::::::::: duration box :::::::::: */

.durationBox {
	-moz-box-pack: center;
}

.durationLabel {
	margin-left: -22px; /* 1/2 of scrubber thumb width, for overhang. */
	padding-top: 0; /* center vertically with scrubber bar */
	padding-left: 8px; /* don't bump into the scrubber bar */
	color: rgba(255, 255, 255, .75);
	font-family: Arial, sans-serif;
	font-size: 11px;
}

.backgroundBar {
	/* margin top/bottom: make bar 8px tall (control height = 28, minus 2 * 10 margin) */
	/* margin left/right: 1/2 of scrubber thumb width, for overhang. */
	margin: 10px 22px;
	-moz-border-radius: 4px;
	background: rgba(255, 255, 255, .5) none;
}

.bufferBar,
.progressBar {
	-moz-appearance: none;
	/* margin top/bottom: make bar 8px tall (control height = 28, minus 2 * 10 margin) */
	/* margin left/right: 1/2 of scrubber thumb width, for overhang. */
	margin: 10px 22px;
	border: none;
	background: transparent none;
	min-width: 0;
	min-height: 0;
}

/* .progress-bar is an element inside the <progressmeter> implementation. */
.bufferBar .progress-bar {
	/*
	 * Note that this is drawn on top of the .backgroundBar. So although this
	 * has the same background-color specified, the semitransparent
	 * compositing gives it a different visual appearance.
	 */
	-moz-appearance: none;
	-moz-border-radius: 4px;
	background: rgba(255, 255, 255, .5) none;
}

.progressBar .progress-bar {
	-moz-appearance: none;
	-moz-border-radius: 4px 0 0 4px;
	background: white none;
}

/* :::::::::: scrubber :::::::::: */

/* .scale-slider is an element inside the <scale> implementation. */
.scrubber .scale-slider,
.volumeControl .scale-slider {
	/* Hide the default horizontal bar. */
	-moz-appearance: none;
	margin: 0;
	background: none;
}

.scrubber .scale-slider {
	/* abs(margin-top) + margin-bottom + bar height == timeThumb height */
	margin-top: -10px;
	margin-bottom: 10px;
}

/* .scale-thumb is an element inside the <scale> implementation. */
.scrubber .scale-thumb {
	/* Override the default thumb appearance with a custom image. */
	-moz-appearance: none;
	background: transparent;
	border: none;
}

.timeThumb {
	-moz-box-pack: center;
	background: url("chrome://global/skin/media/scrubberThumb.png") no-repeat center;
	min-width: 45px;
	min-height: 28px;
}

.timeThumb[showhours="true"] {
	background: url("chrome://global/skin/media/scrubberThumbWide.png") no-repeat center;
}

.timeLabel {
	padding-top: 2px;
	color: rgba(255, 255, 255, .75);
	font-size: 10px;
	font-family: Arial, sans-serif;
	text-shadow: rgba(0, 0, 0, .3) 0 1px;
}

/* :::::::::: volume control :::::::::: */

.volumeStack {
	/* use negative margin to place stack over the mute button to its left. */
	margin: -70px 3px 28px -31px;
	padding-top: 6px;
	background-color: rgba(35, 31, 32, .74);
	overflow: hidden; /* crop it when sliding down, don't grow the control bar */
	position: relative; /* Trick to work around negative margin interfering with dragging the thumb. */
	width: 28px;
	height: 70px;
}

.volumeControl {
	min-height: 64px;
}

/* .scale-thumb is an element inside the <scale> implementation. */
.volumeControl .scale-thumb {
	/* Override the default thumb appearance with a custom image. */
	-moz-appearance: none;
	border: none;
	background: url("chrome://global/skin/media/volumeThumb.png") no-repeat center;
	min-width: 16px;
	min-height: 11px;
}

.volumeBackgroundBar {
	/* margin left/right: make bar 8px wide (control width = 28, minus 2 * 10 margin) */
	margin: 0 10px;
	background-color: rgba(255, 255, 255, .5);
	-moz-border-radius: 4px;
}

/* :::::::::: status :::::::::: */

.statusOverlay {
	background-color: rgba(0, 0, 0, .55);
}

.statusIcon {
	margin-bottom: 28px; /* same height as .controlBar, to keep icon centered above it */
	width: 36px;
	height: 36px;
}

.statusIcon[type="throbber"] {
	background: url("chrome://global/skin/media/throbber.png") no-repeat center;
}

.statusIcon[type="error"] {
	background: url("chrome://global/skin/media/error.png") no-repeat center;
}
